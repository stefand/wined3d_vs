From 14427e4b41dd4b610b05e04f71a11347c700af76 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Stefan=20D=C3=B6singer?= <stefan@codeweavers.com>
Date: Wed, 1 Jan 2014 17:08:24 +0100
Subject: [PATCH 3/7] d3dx9_36: Get rid of FILL_INDEX_BUFFER.

The macro uses an incorrect type for first_index in the DWORD case. While
this could be fixed by passing the destination type to the macro, I think
it's better to just replicate the code.
---
 dlls/d3dx9_36/mesh.c | 49 ++++++++++++++++++++++++++++----------------
 1 file changed, 31 insertions(+), 18 deletions(-)

diff --git a/dlls/d3dx9_36/mesh.c b/dlls/d3dx9_36/mesh.c
index 5e0bb98efc..d69c4d867a 100644
--- a/dlls/d3dx9_36/mesh.c
+++ b/dlls/d3dx9_36/mesh.c
@@ -3572,27 +3572,40 @@ HRESULT WINAPI D3DXLoadSkinMeshFromXof(struct ID3DXFileData *filedata, DWORD opt
     if (FAILED(hr)) goto cleanup;
 
     index_in_ptr = mesh_data.indices;
-#define FILL_INDEX_BUFFER(indices_var) \
-        for (i = 0; i < mesh_data.num_poly_faces; i++) \
-        { \
-            DWORD count = mesh_data.num_tri_per_face[i]; \
-            WORD first_index = *index_in_ptr++; \
-            while (count--) { \
-                *indices_var++ = first_index; \
-                *indices_var++ = *index_in_ptr; \
-                index_in_ptr++; \
-                *indices_var++ = *index_in_ptr; \
-            } \
-            index_in_ptr++; \
-        }
-    if (options & D3DXMESH_32BIT) {
+    if (options & D3DXMESH_32BIT)
+    {
         DWORD *dword_indices = indices;
-        FILL_INDEX_BUFFER(dword_indices)
-    } else {
+        for (i = 0; i < mesh_data.num_poly_faces; i++)
+        {
+            DWORD count = mesh_data.num_tri_per_face[i];
+            DWORD first_index = *index_in_ptr++;
+            while (count--)
+            {
+                *dword_indices++ = first_index;
+                *dword_indices++ = *index_in_ptr;
+                 index_in_ptr++;
+                *dword_indices++ = *index_in_ptr;
+            }
+            index_in_ptr++;
+        }
+    }
+    else
+    {
         WORD *word_indices = indices;
-        FILL_INDEX_BUFFER(word_indices)
+        for (i = 0; i < mesh_data.num_poly_faces; i++)
+        {
+            DWORD count = mesh_data.num_tri_per_face[i];
+            WORD first_index = (WORD)*index_in_ptr++;
+            while (count--)
+            {
+                *word_indices++ = first_index;
+                *word_indices++ = (WORD)*index_in_ptr;
+                index_in_ptr++;
+                *word_indices++ = (WORD)*index_in_ptr;
+            }
+            index_in_ptr++;
+        }
     }
-#undef FILL_INDEX_BUFFER
     d3dxmesh->lpVtbl->UnlockIndexBuffer(d3dxmesh);
 
     if (mesh_data.material_indices) {
-- 
2.24.0.windows.2

